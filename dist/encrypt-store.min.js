"use strict";
/*! encrypt-storejs v1.0.5 | MIT (c) 2024 Abdullah Al Fahim | https://github.com/abfahimb/encrypt-storeJS */Object.defineProperty(exports,"__esModule",{value:!0}),exports.EncryptStoreJS=void 0;class EncryptStoreJS{constructor(e,t){this.storageKey=e,this.key=t}static init(e,t){return EncryptStoreJS.instance?console.warn("SecureLocalStorage has already been initialized. Please create a new instance for different settings."):EncryptStoreJS.instance=new EncryptStoreJS(e,t),EncryptStoreJS.instance}generateRandomSalt(e=16){const t=new Uint8Array(e);return window.crypto.getRandomValues(t),Array.from(t,(e=>String.fromCharCode(e))).join("")}expandKey(e,t){const r=[];for(let o=0;o<Math.max(e.length,t.length);o++){const n=e.charCodeAt(o%e.length),a=t.charCodeAt(o%t.length);r.push(String.fromCharCode(n^a))}return r.join("")}xorEncryptDecrypt(e){const t=this.generateRandomSalt(),r=this.expandKey(this.key,t);let o="";for(let t=0;t<e.length;t++)o+=String.fromCharCode(e.charCodeAt(t)^r.charCodeAt(t%r.length));return this.encodeToBase64(t+o)}encodeToBase64(e){try{return btoa(unescape(encodeURIComponent(e)))}catch(e){throw this.clearEncryptStore(),e}}decodeFromBase64(e){try{return decodeURIComponent(escape(atob(e)))}catch(e){throw this.clearEncryptStore(),e}}encryptData(e){return this.xorEncryptDecrypt(e)}decryptData(e){const t=this.decodeFromBase64(e),r=t.substring(0,16),o=t.substring(16),n=this.expandKey(this.key,r);let a="";for(let e=0;e<o.length;e++)a+=String.fromCharCode(o.charCodeAt(e)^n.charCodeAt(e%n.length));return a}setEncryptStore(e){if("object"==typeof e&&null!==e){const t=this.encryptData(JSON.stringify(e));"undefined"!=typeof window&&localStorage.setItem(this.storageKey,t)}else console.error("Value must be an object")}updateEncryptStore(e){if("undefined"!=typeof window){const t=localStorage.getItem(this.storageKey),r=t?JSON.parse(this.decryptData(t)):{};if("object"==typeof e&&null!==e){const t=Object.assign(Object.assign({},r),e),o=this.encryptData(JSON.stringify(t));localStorage.setItem(this.storageKey,o)}else console.error("Updates must be an object")}}deleteEncryptStore(e){if("undefined"!=typeof window){const t=localStorage.getItem(this.storageKey),r=t?JSON.parse(this.decryptData(t)):{};if(r&&"object"==typeof r){e.forEach((e=>delete r[e]));const t=this.encryptData(JSON.stringify(r));localStorage.setItem(this.storageKey,t)}else console.error("Stored data is not an object or does not exist")}}getEncryptStore(e){if("undefined"!=typeof window){const t=localStorage.getItem(this.storageKey),r=t?JSON.parse(this.decryptData(t)):null;return e&&r&&e in r?r[e]||null:r}return null}clearEncryptStore(){"undefined"!=typeof window&&localStorage.removeItem(this.storageKey)}}exports.EncryptStoreJS=EncryptStoreJS;
//# sourceMappingURL=encrypt-store.js.map